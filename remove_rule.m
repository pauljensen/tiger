function [tiger] = remove_rule(tiger,rule,varargin)
% REMOVE_RULE  Remove rule(s) previously added to a TIGER model
%
%   [TIGER] = REMOVE_RULE(TIGER,RULE,...params...)
%
%   Remove the constraints generated by a list of rules.  RULE can be
%   either a string, EXPR object, or a cell.  Removed constriants are
%   zeroed, and the rules is removed from TIGER.param.rules.
%
%   Parameters given to the function are passed to REMOVE_NULL_RULES.

if isa(rule,'double')
    % indices given
    exprs = tiger.param.rules(rule);
else
    exprs = assert_cell(parse_string(rule));
end

null_expr = create_empty_expr_struct();
null_expr.NULL = true;

N = length(exprs);
rule_strs = map(@expr_to_string,tiger.param.rules);
for i = 1 : N
    % find matching rules
    matched = find(cellfun(@(x) strcmp(x,expr_to_string(exprs{i})), ...
                           rule_strs));
    % find corresponding rows
    to_zero = ismember(tiger.param.rule_id,matched);
    % zero the rows
    tiger.A(to_zero,:) = 0;
    tiger.b(to_zero) = 0;
    tiger.ind(to_zero) = 0;
    tiger.indtypes(to_zero) = ' ';
    tiger.ctypes(to_zero) = '=';
    % replace the removed rule with the null expression
    for j = 1 : length(matched)
        tiger.param.rules{matched(j)} = null_expr;
    end
end

tiger = remove_null_rules(tiger,varargin{:});
